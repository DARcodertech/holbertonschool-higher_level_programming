=============================
How to Use matrix_divided.py
=============================

This module defines a function called `matrix_divided` that divides all elements of a matrix by a given number.

Usage
=====

Basic usage:

::

    >>> matrix_divided = __import__('matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Features
========

- Divides all elements in the matrix by a number (`div`).
- Returns a new matrix where all elements are rounded to 2 decimal places.
- Original matrix remains unchanged.
- Automatically raises errors for invalid inputs.

Error Handling
==============

1. **Type errors:**

   Raised if the input is not valid.

   ::

       >>> matrix_divided([[1, "2"], [3, 4]], 2)
       Traceback (most recent call last):
       TypeError: matrix must be a matrix (list of lists) of integers/floats

       >>> matrix_divided("not a matrix", 2)
       Traceback (most recent call last):
       TypeError: matrix must be a matrix (list of lists) of integers/floats

       >>> matrix_divided([[1, 2], [3, 4]], "not a number")
       Traceback (most recent call last):
       TypeError: div must be a number

2. **ZeroDivisionError:**

   Raised if the divisor is zero.

   ::

       >>> matrix_divided([[1, 2], [3, 4]], 0)
       Traceback (most recent call last):
       ZeroDivisionError: division by zero

3. **Matrix row size errors:**

   Raised if the rows of the matrix are not all the same size.

   ::

       >>> matrix_divided([[1, 2], [3, 4, 5]], 2)
       Traceback (most recent call last):
       TypeError: Each row of the matrix must have the same size