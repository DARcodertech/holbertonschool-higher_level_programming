===========================
How to Use 2-matrix_divided.py
===========================

This module defines a function `matrix_divided` that divides all elements of a matrix by a specified divisor, rounding each result to 2 decimal places.

Usage
=====

Basic usage:

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Error Handling
==============

Type errors:

::

    >>> matrix_divided([[1, 2], [3, "4"]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2], [3, 4]], "2")
    Traceback (most recent call last):
    TypeError: div must be a number

Row size errors:

::

    >>> matrix_divided([[1, 2], [3, 4, 5]], 2)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Division errors:

::

    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Dividing by infinity:

::

    >>> matrix = [[1, 2], [3, 4]]
    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]